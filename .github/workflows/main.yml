# This is a basic workflow to help you get started with Actions

name: Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains jobs called "build", "dockerise"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::102752706570:role/NestRestPipelineRole
          role-session-name: workflow-session
          aws-region: us-east-2

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn run build
        
      - name: Unit Test
        run: yarn test

      - name: Test Coverage
        run: yarn run test:cov

      - name: End to end Test
        run: yarn run test:e2e

      - name: End to end Test
        run: yarn run test:e2e

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Bump Version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "feat:"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "fix:"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}"
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false


      - name: Dockerize & Push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nest-rest-api
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$version .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$version
