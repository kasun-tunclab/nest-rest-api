# This is a basic workflow to help you get started with Actions

name: Pipeline
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains jobs called "build", "dockerise"
  ci:
    # The type of runner that the job will run on
    name: Build & Publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::102752706570:role/NestRestPipelineRole
          role-session-name: workflow-session
          aws-region: us-east-2

      - name: Install Dependencies
        run: |
          yarn install
          cd infra
          yarn install
          cd ../


      - name: Build
        run: yarn run build

      - name: Unit Test
        run: yarn test

      - name: Test Coverage
        run: yarn run test:cov

      - name: End to end Test
        run: yarn run test:e2e

      - name: End to end Test
        run: yarn run test:e2e

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Bump Version Tag
        id: semver
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

      - name: Udate Version File
        env:
          IMAGE_TAG: ${{ steps.semver.outputs.new_tag }}
        run: |
          created_at=`date +"%Y-%m-%d %H:%M:%S"`
          ver_txt=$IMAGE_TAG::$created_at
          echo $ver_txt
          echo $ver_txt > version.txt

      - name: Dockerize & Push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nest-rest-api
          IMAGE_TAG: ${{ steps.semver.outputs.new_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    outputs:
      image_tag: ${{ steps.semver.outputs.new_tag }}

  cd:
    name: Deploy (non-prod)
    needs:
      - ci
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::102752706570:role/NestRestPipelineRole
          role-session-name: workflow-session
          aws-region: us-east-2

      - name: Install Dependencies
        run: |
          cd infra
          yarn install

      - name: Deploy
        env:
          IMAGE_TAG: ${{needs.ci.outputs.image_tag}}
        run: |
          yarn run deploy:api -c dockerImageTag=$IMAGE_TAG --require-approval never
          cd ../

      - name: Smoke Test
        env:
          API_BASE_URL: https://api.nest.kasun.clearsigma.com
          IMAGE_VERSION: ${{needs.ci.outputs.image_tag}}
        run: yarn run test:smoke